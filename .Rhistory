outcome_code = 17
}
else if(toupper(outcome) == "PNEUMONIA"){
outcome_code = 23
}
best_hospitals <- state_hospitals[which(state_hospitals[[outcome_code]] == min(state_hospitals[[outcome_code]], na.rm = TRUE)), ]
best_hospitals_names <- best_hospitals[[2]]
best_hospitals_names
}
best("TX", "heart attack")
best <- function(state, outcome){
file <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- file[,7]
if(!is.character(state) || (!(state %in% states))){
stop("invalid state")
}
if(!is.character(outcome) || (!(toupper(outcome) == "HEART ATTACK") && !(toupper(outcome) == "HEART FAILURE") && !(toupper(outcome) == "PNEUMONIA"))) {
stop("invalid outcome")
}
hospitals <- split(file, file$State)
state_hospitals <- hospitals[c(state)]
state_hospitals <- state_hospitals[[1]]
outcome_code = numeric()
if(toupper(outcome) == "HEART ATTACK"){
outcome_code = 11
}
else if(toupper(outcome) == "HEART FAILURE"){
outcome_code = 17
}
else if(toupper(outcome) == "PNEUMONIA"){
outcome_code = 23
}
best_hospitals <- state_hospitals[which(state_hospitals[[outcome_code]] == min(state_hospitals[[outcome_code]], na.rm = TRUE)), ]
best_hospitals_names <- best_hospitals[[2]]
sort(best_hospitals_names)
}
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
file <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospitals <- split(file, file$State)
state_hospitals <- hospitals[c(state)]
state_hospitals <- state_hospitals[[1]]
hospitals <- split(file, file$State)
state_hospitals <- hospitals[c(state)]
state_hospitals <- hospitals[c("TX")]
state_hospitals <- state_hospitals[[1]]
min(state_hospitals[[17]]
min(state_hospitals[[17]])
state_hospitals
state_hospitals[1]
min(state_hospitals[17])
state_hospitals[17]
min(state_hospitals[[17]])
state_hospitals[[17]]
as.numeric(state_hospitals[[17]])
min(as.numeric(state_hospitals[[17]]))
min(as.numeric(state_hospitals[[17]]), na.rm = TRUE)
min(as.numeric(state_hospitals[[17]], na.rm = TRUE), na.rm = TRUE)
best <- function(state, outcome){
file <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- file[,7]
if(!is.character(state) || (!(state %in% states))){
stop("invalid state")
}
if(!is.character(outcome) || (!(toupper(outcome) == "HEART ATTACK") && !(toupper(outcome) == "HEART FAILURE") && !(toupper(outcome) == "PNEUMONIA"))) {
stop("invalid outcome")
}
hospitals <- split(file, file$State)
state_hospitals <- hospitals[c(state)]
state_hospitals <- state_hospitals[[1]]
outcome_code = numeric()
if(toupper(outcome) == "HEART ATTACK"){
outcome_code = 11
}
else if(toupper(outcome) == "HEART FAILURE"){
outcome_code = 17
}
else if(toupper(outcome) == "PNEUMONIA"){
outcome_code = 23
}
best_hospitals <- state_hospitals[which(as.numeric(state_hospitals[[outcome_code]]) == min(as.numeric(state_hospitals[[outcome_code]]), na.rm = TRUE)), ]
best_hospitals_names <- best_hospitals[[2]]
sort(best_hospitals_names)
}
best("TX", "Heart Failure")
best("MD", "pneumonia")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
source("best.R")
submit()
submit()
submit()
a <- numeric()
a
a <- NA
a
is.na(a)
file <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospitals <- split(file, file$State)
state_hospitals <- hospitals[c("TX")]
state_hospitals <- state_hospitals[[1]]
max(as.numeric(state_hospitals[[11]]), na.rm = TRUE)
as.numeric(state_hospitals[[11]])
sort(state_hospitals[[11]])
sort(as.numeric(state_hospitals[[11]]))
length(state_hospitals[[1]])
length(state_hospitals[[11]])
rankhospital <- function(state, outcome, num = "best"){
file <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- file[,7]
if(!is.character(state) || (!(state %in% states))){
stop("invalid state")
}
if(!is.character(outcome) || (!(toupper(outcome) == "HEART ATTACK") && !(toupper(outcome) == "HEART FAILURE") && !(toupper(outcome) == "PNEUMONIA"))) {
stop("invalid outcome")
}
if(!(num == "best") && !(num == "worst") && !(is.numeric(num)){
stop("invalid num")
}
hospitals <- split(file, file$State)
state_hospitals <- hospitals[c(state)]
state_hospitals <- state_hospitals[[1]]
outcome_code = numeric()
if(toupper(outcome) == "HEART ATTACK"){
outcome_code = 11
}
else if(toupper(outcome) == "HEART FAILURE"){
outcome_code = 17
}
else if(toupper(outcome) == "PNEUMONIA"){
outcome_code = 23
}
criteria = NA;
if(num == "best"){
criteria = min(as.numeric(state_hospitals[[outcome_code]]), na.rm = TRUE)
}
else if(num == "worst"){
criteria = max(as.numeric(state_hospitals[[outcome_code]]), na.rm = TRUE)
}
else{
sorted_vector <- sort(as.numeric(state_hospitals[[outcome_code]]))
if(num <= length(sorted_vector)){
criteria = sorted_vector[num]
}
}
if(is.na(criteria)){
return(criteria)
}
best_hospitals <- state_hospitals[which(as.numeric(state_hospitals[[outcome_code]]) == criteria, na.rm = TRUE)), ]
best_hospitals_names <- best_hospitals[[2]]
sort(best_hospitals_names)
}
rankhospital <- function(state, outcome, num = "best"){
file <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- file[,7]
if(!is.character(state) || (!(state %in% states))){
stop("invalid state")
}
if(!is.character(outcome) || (!(toupper(outcome) == "HEART ATTACK") && !(toupper(outcome) == "HEART FAILURE") && !(toupper(outcome) == "PNEUMONIA"))) {
stop("invalid outcome")
}
if(!(num == "best") && !(num == "worst") && !(is.numeric(num)){
stop("invalid num")
}
}
rankhospital <- function(state, outcome, num = "best"){
file <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- file[,7]
if(!is.character(state) || (!(state %in% states))){
stop("invalid state")
}
if(!is.character(outcome) || (!(toupper(outcome) == "HEART ATTACK") && !(toupper(outcome) == "HEART FAILURE") && !(toupper(outcome) == "PNEUMONIA"))) {
stop("invalid outcome")
}
if(!(num == "best") && !(num == "worst") && !(is.numeric(num))){
stop("invalid num")
}
hospitals <- split(file, file$State)
state_hospitals <- hospitals[c(state)]
state_hospitals <- state_hospitals[[1]]
outcome_code = numeric()
if(toupper(outcome) == "HEART ATTACK"){
outcome_code = 11
}
else if(toupper(outcome) == "HEART FAILURE"){
outcome_code = 17
}
else if(toupper(outcome) == "PNEUMONIA"){
outcome_code = 23
}
criteria = NA;
if(num == "best"){
criteria = min(as.numeric(state_hospitals[[outcome_code]]), na.rm = TRUE)
}
else if(num == "worst"){
criteria = max(as.numeric(state_hospitals[[outcome_code]]), na.rm = TRUE)
}
else{
sorted_vector <- sort(as.numeric(state_hospitals[[outcome_code]]))
if(num <= length(sorted_vector)){
criteria = sorted_vector[num]
}
}
if(is.na(criteria)){
return(criteria)
}
best_hospitals <- state_hospitals[which(as.numeric(state_hospitals[[outcome_code]]) == criteria, na.rm = TRUE)), ]
best_hospitals_names <- best_hospitals[[2]]
sort(best_hospitals_names)
}
rankhospital <- function(state, outcome, num = "best"){
file <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- file[,7]
if(!is.character(state) || (!(state %in% states))){
stop("invalid state")
}
if(!is.character(outcome) || (!(toupper(outcome) == "HEART ATTACK") && !(toupper(outcome) == "HEART FAILURE") && !(toupper(outcome) == "PNEUMONIA"))) {
stop("invalid outcome")
}
if(!(num == "best") && !(num == "worst") && !(is.numeric(num))){
stop("invalid num")
}
hospitals <- split(file, file$State)
state_hospitals <- hospitals[c(state)]
state_hospitals <- state_hospitals[[1]]
outcome_code = numeric()
if(toupper(outcome) == "HEART ATTACK"){
outcome_code = 11
}
else if(toupper(outcome) == "HEART FAILURE"){
outcome_code = 17
}
else if(toupper(outcome) == "PNEUMONIA"){
outcome_code = 23
}
criteria = NA;
if(num == "best"){
criteria = min(as.numeric(state_hospitals[[outcome_code]]), na.rm = TRUE)
}
else if(num == "worst"){
criteria = max(as.numeric(state_hospitals[[outcome_code]]), na.rm = TRUE)
}
else{
sorted_vector <- sort(as.numeric(state_hospitals[[outcome_code]]))
if(num <= length(sorted_vector)){
criteria = sorted_vector[num]
}
}
if(is.na(criteria)){
return(criteria)
}
best_hospitals <- state_hospitals[which(as.numeric(state_hospitals[[outcome_code]]) == criteria, na.rm = TRUE), ]
best_hospitals_names <- best_hospitals[[2]]
sort(best_hospitals_names)
}
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital <- function(state, outcome, num = "best"){
file <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- file[,7]
if(!is.character(state) || (!(state %in% states))){
stop("invalid state")
}
if(!is.character(outcome) || (!(toupper(outcome) == "HEART ATTACK") && !(toupper(outcome) == "HEART FAILURE") && !(toupper(outcome) == "PNEUMONIA"))) {
stop("invalid outcome")
}
if(!(num == "best") && !(num == "worst") && !(is.numeric(num))){
stop("invalid num")
}
hospitals <- split(file, file$State)
state_hospitals <- hospitals[c(state)]
state_hospitals <- state_hospitals[[1]]
outcome_code = numeric()
if(toupper(outcome) == "HEART ATTACK"){
outcome_code = 11
}
else if(toupper(outcome) == "HEART FAILURE"){
outcome_code = 17
}
else if(toupper(outcome) == "PNEUMONIA"){
outcome_code = 23
}
criteria = NA;
if(num == "best"){
criteria = min(as.numeric(state_hospitals[[outcome_code]]), na.rm = TRUE)
}
else if(num == "worst"){
criteria = max(as.numeric(state_hospitals[[outcome_code]]), na.rm = TRUE)
}
else{
sorted_vector <- sort(as.numeric(state_hospitals[[outcome_code]]))
if(num <= length(sorted_vector)){
criteria = sorted_vector[num]
}
}
if(is.na(criteria)){
return(criteria)
}
best_hospitals <- state_hospitals[which(as.numeric(state_hospitals[[outcome_code]]) == criteria), ]
best_hospitals_names <- best_hospitals[[2]]
sort(best_hospitals_names)
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
teste <- rankhospital("TX", "heart failure", 4)
sort(teste)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
submit()
submit(0)
submit()
submit()
submit()
source("rankall.R")
rankall("heart attack", "best")
rankall("heart attack", "best")
source("rankall.R")
rankall("heart attack", "best")
source("rankall.R")
rankall("heart attack", "best")
source("rankall.R")
rankall("heart attack", "best")
?data.frame
source("rankall.R")
rankall("heart attack", "best")
source("rankall.R")
rankall("heart attack", "best")
coisa <- rankall("heart attack", "best")
coisa["UT", "state"]
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
submit()
submit()
submit()
submit()
source("rankall.R")
submit()
rankall("heart failure", 10)
source("rankhospital.R")
rankhospital("WY", "heart failure", 10)
source("rankhospital.R")
rankhospital("WY", "heart failure", 10)
source("rankhospital.R")
rankhospital("WY", "heart failure", 10)
source("rankhospital.R")
rankhospital("WY", "heart failure", 10)
rankhospital("WY", "heart failure", 9)
source("rankhospital.R")
rankhospital("WY", "heart failure", 9)
source("rankhospital.R")
rankhospital("WY", "heart failure", 9)
source("rankhospital.R")
rankhospital("WY", "heart failure", 9)
rankhospital("WY", "heart failure", 10)
source("rankhospital.R")
rankhospital("WY", "heart failure", 10)
source("rankhospital.R")
rankhospital("WY", "heart failure", 10)
source("rankhospital.R")
rankhospital("WY", "heart failure", 10)
source("rankhospital.R")
rankhospital("WY", "heart failure", 10)
source("rankhospital.R")
rankhospital("WY", "heart failure", 10)
rankhospital("WY", "heart failure", 10)
source("rankhospital.R")
rankhospital("WY", "heart failure", 10)
source("rankhospital.R")
rankhospital("WY", "heart failure", 10)
source("rankhospital.R")
rankhospital("WY", "heart failure", 10)
rankhospital("WY", "heart failure")
source("rankhospital.R")
rankhospital("WY", "heart failure")
source("rankall.R")
tail(rankall("heart failure"), 10)
submit()
source("rankall.R")
rankall("heart failure", 10)
tail(rankall("heart failure"), 10)
rankall("heart failure", 10)
tail(rankall("heart failure"), 10)
source("rankall.R")
submit()
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
rankhospital("heart attack", 20)
rankhospital("FL", "heart attack", 20)
source("rankhospital.R")
rankhospital("FL", "heart attack", 20)
source("rankhospital.R")
rankhospital("FL", "heart attack", 20)
source("rankhospital.R")
rankhospital("FL", "heart attack", 20)
source("rankhospital.R")
rankhospital("FL", "heart attack", 20)
source("rankhospital.R")
rankhospital("FL", "heart attack", 20)
source("rankhospital.R")
rankhospital("FL", "heart attack", 20)
source("rankhospital.R")
rankhospital("FL", "heart attack", 20)
source("rankhospital.R")
rankhospital("FL", "heart attack", 20)
source("rankhospital.R")
rankhospital("FL", "heart attack", 20)
source("rankhospital.R")
rankhospital("FL", "heart attack", 20)
source("rankall.R")
tail(rankall("heart failure"), 10)
source("rankall.R")
tail(rankall("heart failure"), 10)
head(rankall("heart attack", 20), 10)
submit()
submit()
submit(0)
source("rankhospital.R")
submit()
submit()
submit()
submit()
?oauth_app
library(httr)
?oauthapp
?oauth_app
myapp <- oauth_app("github", "0fa6709952f5fe99e9f7", "370b6952bb9359fff2885fdf3d058ee969b3253d")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httpuv)
install.packages(httpuv)
install.packages("httpuv")
library(httpuv)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
client_id = "0fa6709952f5fe99e9f7"
Sys.setenv(GITHUB_CONSUMER_SECRET = "370b6952bb9359fff2885fdf3d058ee969b3253d")
library(httr)
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github", client_id)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
## What is mean total number of steps taken per day?
hist(steps_per_day$steps)
steps_per_day
aggregate(steps ~ date, steps_per_day, mean)
hist(steps_per_day$steps)
steps_per_day$steps
## What is the average daily activity pattern?
## Imputing missing values
aggregate(steps ~ date, data, mean)
```{r}
teste <- aggregate(steps ~ date, steps_per_day, mean)
teste <- aggregate(steps ~ date, a, mean)
data[is.na(data$steps,)]
data[,is.na(data$steps)]
```{r}
a
source('~/.active-rstudio-document', echo=TRUE)
---
plot(x, y, type="l", ylab="a", xlab="b");
avg_steps_per_interval$interval
data_na <- data(is.na(data$steps, ))
data_na <- data_full[is.na(data_full$steps), ]
#avg_steps_per_interval
data_na
for (i in 1:nrow(data_na)  {
for (i in 1:nrow(data_na))  {
asda
a
data_na[i, ] <- avg_steps_per_interval[avg_steps_per_interval$interval == data_na[i, ]$interval]$steps
data_na[i, ] <- avg_steps_per_interval[avg_steps_per_interval$interval == data_na[i, ]]$interval]$steps
Sys.setlocale("LC_TIME", "English");
weekend
day_factor
Sys.setlocale("LC_TIME", "English");
library(lattice)
data = data_filled,
library(lattice)
library(lattice)
setwd("D:\\Study\\Coursera\\Data Science\\05 - Reproducible Research\\Week 2\\assignment_1\\RepData_PeerAssessment1")
knit2html
library(knit)
install.packages("knitr")
install.packages("knitr")
knit2html
knit2html
library(knitr)
knit2html
